name: "Acceptance stage"

on:
  workflow_call:
    inputs:
      environment:
        description: "Environment to run tests against"
        required: true
        type: string

jobs:
  test-e2e:
    name: "E2E Test: ${{inputs.environment}} environment"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: ${{ inputs.environment }}
    concurrency:
      group: ${{ inputs.environment }}-env
      cancel-in-progress: false
    env:
      TEST_NHS_APP_URL: ${{ secrets.TEST_NHS_APP_URL }}
      TEST_NHS_LOGIN_PASSWORD: ${{ secrets.TEST_NHS_LOGIN_PASSWORD }}
      TEST_NHS_LOGIN_OTP: ${{ secrets.TEST_NHS_LOGIN_OTP }}
      TEST_APP_URL: ${{ secrets.TEST_APP_URL }}
      NHS_APP_REDIRECT_LOGIN_URL: ${{ secrets.NHS_APP_REDIRECT_LOGIN_URL }}
      VITA_TEST_USER_PATTERN: ${{ secrets.VITA_TEST_USER_PATTERN }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v5

      - name: "Install dependencies"
        run: |
          npm ci --ignore-scripts

      - name: "Get current week number"
        id: date
        run: echo "week_num=$(date -u +'%Y-%V')" >> "$GITHUB_OUTPUT"

      - name: "Cache Playwright browsers"
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.date.outputs.week_num }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-${{ steps.date.outputs.week_num }}-

      - name: "Install Playwright browsers"
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: |
          npx playwright install --with-deps

      - name: "Run Playwright tests"
        run: |
          npm run e2e

      - name: "Upload report"
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report-e2e
          path: playwright-report/
          retention-days: 30

  test-contract:
    name: "Contract Test: ${{inputs.environment}} environment"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment: ${{ inputs.environment }}
    env:
      CONTENT_API_ENDPOINT: ${{ secrets.CONTENT_API_ENDPOINT }}
      CONTENT_API_KEY: ${{ secrets.CONTENT_API_KEY }}
      CONTENT_CACHE_IS_CHANGE_APPROVAL_ENABLED: "false"
      ELIGIBILITY_API_ENDPOINT: ${{ secrets.ELIGIBILITY_API_ENDPOINT }}
      ELIGIBILITY_API_KEY: ${{ secrets.ELIGIBILITY_API_KEY }}
      SSM_PREFIX: ${{ secrets.SSM_PREFIX }}
      NHS_APP_REDIRECT_LOGIN_URL: "dummy"
      CONTENT_CACHE_PATH: "dummy"
      NHS_LOGIN_URL: "dummy"
      NHS_LOGIN_CLIENT_ID: "dummy"
      NHS_LOGIN_SCOPE: "dummy"
      NHS_LOGIN_PRIVATE_KEY: "dummy"
      NBS_URL: "dummy"
      NBS_BOOKING_PATH: "dummy"
      MAX_SESSION_AGE_MINUTES: 0
      IS_APIM_AUTH_ENABLED: ${{ vars.IS_APIM_AUTH_ENABLED }}
      AUTH_SECRET: "dummy"
      AUDIT_CLOUDWATCH_LOG_GROUP: "dummy"
      AUDIT_CLOUDWATCH_LOG_STREAM: "dummy"
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v5
      - name: "Install dependencies"
        run: |
          npm ci --ignore-scripts
      - name: "Run contract tests"
        run: |
          npm run contract
