name: "Build stage"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_epoch:
        description: "Build epoch, set by the CI/CD pipeline workflow"
        required: true
        type: string
      nodejs_version:
        description: "Node.js version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      python_version:
        description: "Python version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      terraform_version:
        description: "Terraform version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      version:
        description: "Version of the software, set by the CI/CD pipeline workflow"
        required: true
        type: string
env:
  DOCKER_IMAGE_NAME: vita-app

jobs:
  build-docker-image:
    name: "Build Docker image"
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
      - name: Get short SHA
        id: sha
        run: echo "::set-output name=short::$(echo ${GITHUB_SHA} | cut -c1-7)"
      - name: Get the release version
        id: strip-branch-name
        run: |
          release_version=$(echo "${{ steps.date.outputs.date }}\
          -${{ github.run_id }}_${{ github.run_number }}\
          _${{ github.run_attempt }}-${{ steps.sha.outputs.short }}")
          echo "Building release version $release_version"
          echo "RELEASE_VERSION=$release_version" >> $GITHUB_ENV
      - name: "Build Docker Image"
        run: |
          echo "Building docker image for artefact"
          docker build . --file Dockerfile --tag $DOCKER_IMAGE_NAME:$RELEASE_VERSION
        env:
          CONTENT_API_ENDPOINT: ${{ vars.CONTENT_API_ENDPOINT }}
          CONTENT_API_VACCINATIONS_PATH: ${{ vars.CONTENT_API_VACCINATIONS_PATH }}
      - name: "Upload artefact"
        run: |
          echo "Uploading artefact ..."
          # TODO: Use either action/cache or action/upload-artifact
          # TODO: Will be done in the future
