name: "Build stage"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_epoch:
        description: "Build epoch, set by the CI/CD pipeline workflow"
        required: true
        type: string
      nodejs_version:
        description: "Node.js version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      python_version:
        description: "Python version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      terraform_version:
        description: "Terraform version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      version:
        description: "Version of the software, set by the CI/CD pipeline workflow"
        required: true
        type: string

env:
  AWS_REGION: eu-west-2
  AWS_S3_PACKAGE_BUCKET: vaccinations-app-github

jobs:
  build-opennext-package:
    name: "Build & Upload OpenNext package"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: Get current date
        id: date
        run: echo "::set-output name=today_date::$(date +'%Y%m%d')"
      - name: Get short SHA
        id: sha
        run: echo "::set-output name=short_sha::$(echo ${GITHUB_SHA} | cut -c1-7)"
      - name: Get the release version
        id: strip-branch-name
        run: |
          release_version=$(echo "${{ steps.date.outputs.today_date }}\
          -${{ github.run_id }}_${{ github.run_number }}\
          _${{ github.run_attempt }}-${{ steps.sha.outputs.short_sha }}")
          echo "Building release version $release_version"
          echo "RELEASE_VERSION=$release_version" >> $GITHUB_ENV
      - name: "Build OpenNext Package"
        run: |
          npm ci --ignore-scripts
          npm run build:opennext
      - name: "Zip OpenNext Package"
        run: zip -r open-next.zip .open-next/
      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-session-name: GitHubActionsSession
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      - name: "Upload OpenNext Package To S3"
        run: |
          aws s3 cp open-next.zip "s3://${AWS_S3_PACKAGE_BUCKET}/${RELEASE_VERSION}/open-next.zip"
