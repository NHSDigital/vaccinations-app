name: "Build stage"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_epoch:
        description: "Build epoch, set by the CI/CD pipeline workflow"
        required: true
        type: string
      nodejs_version:
        description: "Node.js version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      python_version:
        description: "Python version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      terraform_version:
        description: "Terraform version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      version:
        description: "Version of the software, set by the CI/CD pipeline workflow"
        required: true
        type: string

env:
  AWS_REGION: eu-west-2
  AWS_S3_ARTEFACTS_BUCKET: vita-050451358653-artefacts-dev

jobs:
  build-and-package:
    name: "Build and package"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      id-token: write
      contents: read
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: "Get current date"
        id: date
        run: echo "today_date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
      - name: "Get short SHA"
        id: sha
        run: echo "short_sha=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT
      - name: "Get the release version"
        id: strip-branch-name
        run: |
          release_version=${{ steps.sha.outputs.short_sha }}
          echo "Building release version $release_version"
          echo "RELEASE_VERSION=$release_version" >> $GITHUB_ENV
      - name: "Build OpenNext Package"
        run: |
          npm ci --ignore-scripts
          npm run build:opennext
      - name: "Build Lambda Package"
        run: |
          npm run build:lambda
      - name: "Zip OpenNext Package"
        run: zip -r open-next.zip .open-next/
      - name: "Zip Lambda Package"
        run: zip -j -r lambda.zip dist/
      - name: "Create workflow URL"
        run: |
          echo "Workflow URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> workflow.log
      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-session-name: GitHubActionsSession
          role-to-assume: ${{ secrets.IAM_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      - name: "Upload Packages To S3"
        run: |
#          Prevent overwriting of existing artefacts
          aws s3api put-object --bucket "${AWS_S3_ARTEFACTS_BUCKET}" --key "sha/${RELEASE_VERSION}/open-next.zip" --body "open-next.zip" --if-none-match '*' || {
            echo "Uploading open-next.zip to S3 bucket failed!"
            exit 1
          }

          aws s3api put-object --bucket "${AWS_S3_ARTEFACTS_BUCKET}" --key "sha/${RELEASE_VERSION}/lambda.zip" --body "lambda.zip" --if-none-match '*' || {
            echo "Uploading lambda.zip to S3 bucket failed!"
            exit 1
          }

          aws s3api put-object --bucket "${AWS_S3_ARTEFACTS_BUCKET}" --key "sha/${RELEASE_VERSION}/workflow.log" --body "workflow.log" --if-none-match '*' || {
            echo "Uploading workflow.log to S3 bucket failed!"
            exit 1
          }

          echo "Upload artifacts to S3 bucket succeeded!"
